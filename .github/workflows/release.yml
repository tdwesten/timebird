name: Release Application

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ${{ matrix.platform }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-15
            args: --target aarch64-apple-darwin
          - platform: macos-15
            args: --target x86_64-apple-darwin
          - platform: windows-latest
            args: ""

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json

      - name: Set up pnpm and install frontend dependencies
        uses: pnpm/action-setup@v4
        with:
          run_install: true

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-15' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: 3.x

      - name: Build and release application
        id: build
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
          VITE_MODE: production
          TAURI_SIGNING_PRIVATE_KEY: ${{ github.workspace }}/.tauri/updater.key
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: v__VERSION__
          releaseName: v__VERSION__
          releaseBody: v__VERSION__ release
          releaseDraft: true
          args: ${{ matrix.args }}
          owner: ${{ github.repository_owner }}
          repo: tauri-app-release
          releaseCommitish: main

      - name: Create Windows portable asset
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          ConvertFrom-Json '${{ steps.build.outputs.artifactPaths }}' | ForEach-Object {
              if ((Split-Path $_ -Leaf) -match '(.+)-setup\.exe$') {
                  $asset = Join-Path $PWD "$($Matches[1]).zip"
                  Compress-Archive *.exe,third-party $asset
                  echo "WINDOWS_PORTABLE_ASSET=$asset" >> $env:GITHUB_ENV
              }
          }
        working-directory: src-tauri/target/release

      - name: Release Windows portable asset
        if: runner.os == 'Windows'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.build.outputs.appVersion }}
          files: ${{ env.WINDOWS_PORTABLE_ASSET }}
          repository: ${{ github.repository_owner }}/tauri-app-release
          token: ${{ secrets.DEPLOY_TOKEN }}

      - name: Create tag
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.build.outputs.appVersion }}
          body: v${{ steps.build.outputs.appVersion }} release